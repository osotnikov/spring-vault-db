services:

  db:
    image: debezium/postgres
    networks:
      - net1
    container_name: db
    restart: always
    environment:
      - POSTGRES_USER=test
      - POSTGRES_PASSWORD=test
      - POSTGRES_DB=userdb
    ports:
      - "5432:5432"
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/000_init.sql

  vault:
    image: hashicorp/vault:1.18
    container_name: vault
    cap_add:
      - IPC_LOCK
    ports:
      - "8201:8201"
    environment:
      VAULT_ADDR: 'http://0.0.0.0:8201'
      VAULT_API_ADDR: 'http://0.0.0.0:8201'
      VAULT_LOCAL_CONFIG: '{"listener": [{"tcp":{"address": "0.0.0.0:8201","tls_disable":"1"}}], "default_lease_ttl": "168h", "max_lease_ttl": "720h"}, "ui": true}'
      VAULT_DEV_ROOT_TOKEN_ID: '0000'
    volumes:
      - vault-volume:/data
    depends_on:
      - db
    networks:
      - net1

  vault-init:
    networks:
      - net1
    container_name: vault-init
    image: hashicorp/vault:1.18
    volumes:
      - ./vault-init.sh:/vault-init.sh
    depends_on:
      vault:
        condition: service_started
    restart: "no"
    entrypoint: sh -c "sh /vault-init.sh"

  demo:
    networks:
      - net1
    image: myapp
    hostname: demo
    container_name: demo
    ports:
      - "8090:8090"
    environment:
      - DB_URL=jdbc:postgresql://db:5432/userdb
    depends_on:
#      db:
      vault-init:
        condition: service_completed_successfully

volumes:
  vault-volume:

networks:
  net1:
    name: net1
